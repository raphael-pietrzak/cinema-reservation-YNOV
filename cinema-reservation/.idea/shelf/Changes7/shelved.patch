Index: components/MovieCard.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"use client\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport useAuth from \"@/hooks/useAuth\";\r\n\r\nconst MovieCard = ({ movie }) => {\r\n    const {isAuthenticated} = useAuth();\r\n    const [isFavorite, setIsFavorite] = useState(false); // État local pour savoir si le film est favori\r\n\r\n    const toggleFavorite = () => {\r\n        setIsFavorite((prev) => !prev); // Inverse l'état favori\r\n    };\r\n\r\n    return (\r\n        <div className=\"border rounded-lg p-4 shadow-md\">\r\n            <h2 className=\"text-xl font-semibold mb-2\">{movie.title}</h2>\r\n            <p className=\"text-gray-700 mb-2\">Genre : {movie.genre}</p>\r\n            <p className=\"text-gray-700 mb-2\">Durée : {movie.duration} minutes</p>\r\n            <p className=\"text-gray-700 mb-4\">Réalisateur : {movie.director}</p>\r\n\r\n            {/* Bouton pour marquer comme favori */}\r\n            <button\r\n                onClick={toggleFavorite}\r\n                className={`py-2 px-4 rounded ${\r\n                    isFavorite ? \"bg-red-500 text-white\" : \"bg-gray-200 text-black\"\r\n                }`}\r\n                hidden={!isAuthenticated}\r\n            >\r\n                {isFavorite ? \"Retirer des favoris\" : \"Ajouter aux favoris\"}\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MovieCard;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/components/MovieCard.jsx b/components/MovieCard.jsx
--- a/components/MovieCard.jsx	(revision 471200d35ea2f6922d560e3f80fbf24ae53e353e)
+++ b/components/MovieCard.jsx	(date 1737371845967)
@@ -1,33 +1,53 @@
 "use client";
 
 import React, { useState } from "react";
+import { Heart, HeartFill } from "lucide-react"; // Icônes pour les favoris
 import useAuth from "@/hooks/useAuth";
 
-const MovieCard = ({ movie }) => {
-    const {isAuthenticated} = useAuth();
-    const [isFavorite, setIsFavorite] = useState(false); // État local pour savoir si le film est favori
+const MovieCard = ({ movie, onBookClick }) => {
+    const { isAuthenticated } = useAuth();
+    const [isFavorite, setIsFavorite] = useState(false);
 
     const toggleFavorite = () => {
-        setIsFavorite((prev) => !prev); // Inverse l'état favori
+        setIsFavorite((prev) => !prev);
     };
 
     return (
-        <div className="border rounded-lg p-4 shadow-md">
-            <h2 className="text-xl font-semibold mb-2">{movie.title}</h2>
-            <p className="text-gray-700 mb-2">Genre : {movie.genre}</p>
-            <p className="text-gray-700 mb-2">Durée : {movie.duration} minutes</p>
-            <p className="text-gray-700 mb-4">Réalisateur : {movie.director}</p>
+        <div className="bg-white rounded-lg shadow-lg overflow-hidden transition-transform hover:scale-[1.02]">
+            {/* Image du film */}
+            <img
+                src={movie.posterUrl || "https://via.placeholder.com/300x400"}
+                alt={movie.title}
+                className="w-full h-64 object-cover"
+            />
+            <div className="p-4">
+                {/* Titre et détails */}
+                <h2 className="text-2xl font-bold text-gray-900 mb-2">{movie.title}</h2>
+                <p className="text-gray-700 mb-2">Genre : {movie.genre}</p>
+                <p className="text-gray-700 mb-2">Durée : {movie.duration} minutes</p>
+                <p className="text-gray-700 mb-2">Réalisateur : {movie.director}</p>
+                <p className="text-gray-700 mb-4">Année : {movie.year}</p>
 
-            {/* Bouton pour marquer comme favori */}
-            <button
-                onClick={toggleFavorite}
-                className={`py-2 px-4 rounded ${
-                    isFavorite ? "bg-red-500 text-white" : "bg-gray-200 text-black"
-                }`}
-                hidden={!isAuthenticated}
-            >
-                {isFavorite ? "Retirer des favoris" : "Ajouter aux favoris"}
-            </button>
+                {/* Boutons */}
+                <div className="flex justify-between items-center">
+                    {isAuthenticated && (
+                        <button
+                            onClick={() => onBookClick(movie.id)}
+                            className="bg-blue-500 text-white py-2 px-4 rounded-lg hover:bg-blue-600"
+                        >
+                            Réserver
+                        </button>
+                    )}
+                    {isAuthenticated && (
+                        <button
+                            onClick={toggleFavorite}
+                            className="text-red-500 hover:text-red-700 transition-colors"
+                        >
+                            {isFavorite ? <HeartFill size={24} /> : <Heart size={24} />}
+                        </button>
+                    )}
+                </div>
+            </div>
         </div>
     );
 };
