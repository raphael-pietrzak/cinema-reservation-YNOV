Index: components/Navbar.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"use client\";\r\n\r\nimport React from \"react\";\r\nimport Link from \"next/link\";\r\nimport useAuth from \"@/hooks/useAuth\";\r\n\r\nconst Navbar = () => {\r\n    const { isAuthenticated } = useAuth();\r\n\r\n    return (\r\n        <nav className=\"bg-blue-500 text-white py-4\">\r\n            <div className=\"container mx-auto flex justify-between items-center\">\r\n                <h1 className=\"text-xl font-bold\">\r\n                    <Link href=\"/\">\uD83C\uDFA5 Cinema Reservation</Link>\r\n                </h1>\r\n                <div className=\"space-x-4\">\r\n                    <Link href=\"/\" className=\"hover:underline\">\r\n                        Accueil\r\n                    </Link>\r\n                    <Link href=\"/login\" className=\"hover:underline\" hidden={isAuthenticated}>\r\n                        Connexion\r\n                    </Link>\r\n                    <Link href=\"/register\" className=\"hover:underline\" hidden={isAuthenticated}>\r\n                        Inscription\r\n                    </Link>\r\n                    <Link href=\"/movies\" className=\"hover:underline\" hidden={!isAuthenticated}>\r\n                        Films\r\n                    </Link>\r\n                    <Link href=\"/sessions\" className=\"hover:underline\" hidden={!isAuthenticated}>\r\n                        Sessions\r\n                    </Link>\r\n                    <Link href=\"/logout\" className=\"hover:underline\" hidden={!isAuthenticated}>\r\n                        DÃ©connexion\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/components/Navbar.jsx b/components/Navbar.jsx
--- a/components/Navbar.jsx	(revision 471200d35ea2f6922d560e3f80fbf24ae53e353e)
+++ b/components/Navbar.jsx	(date 1737365286966)
@@ -8,9 +8,9 @@
     const { isAuthenticated } = useAuth();
 
     return (
-        <nav className="bg-blue-500 text-white py-4">
+        <nav className="bg-gradient-to-r from-blue-500 to-purple-600 text-white shadow-lg py-4">
             <div className="container mx-auto flex justify-between items-center">
-                <h1 className="text-xl font-bold">
+            <h1 className="text-xl font-bold">
                     <Link href="/">ðŸŽ¥ Cinema Reservation</Link>
                 </h1>
                 <div className="space-x-4">
Index: app/layout.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Geist, Geist_Mono } from \"next/font/google\";\r\nimport \"./globals.css\";\r\nimport Navbar from \"@/components/Navbar\";\r\n\r\nconst geistSans = Geist({\r\n  variable: \"--font-geist-sans\",\r\n  subsets: [\"latin\"],\r\n});\r\n\r\nconst geistMono = Geist_Mono({\r\n  variable: \"--font-geist-mono\",\r\n  subsets: [\"latin\"],\r\n});\r\n\r\nexport const metadata = {\r\n  title: \"Create Next App\",\r\n  description: \"Generated by create next app\",\r\n};\r\n\r\nexport default function RootLayout({ children }) {\r\n  return (\r\n    <html lang=\"en\">\r\n      <body\r\n        className={`${geistSans.variable} ${geistMono.variable} antialiased`}\r\n      >\r\n      <Navbar />\r\n        {children}\r\n      </body>\r\n    </html>\r\n  );\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/layout.js b/app/layout.js
--- a/app/layout.js	(revision 471200d35ea2f6922d560e3f80fbf24ae53e353e)
+++ b/app/layout.js	(date 1737369197148)
@@ -1,31 +1,34 @@
-import { Geist, Geist_Mono } from "next/font/google";
-import "./globals.css";
-import Navbar from "@/components/Navbar";
-
-const geistSans = Geist({
-  variable: "--font-geist-sans",
-  subsets: ["latin"],
-});
-
-const geistMono = Geist_Mono({
-  variable: "--font-geist-mono",
-  subsets: ["latin"],
-});
-
 export const metadata = {
-  title: "Create Next App",
-  description: "Generated by create next app",
+    title: "Cinema Reservation",
+    description: "RÃ©servez vos sÃ©ances de cinÃ©ma facilement !",
 };
 
 export default function RootLayout({ children }) {
-  return (
-    <html lang="en">
-      <body
-        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
-      >
-      <Navbar />
-        {children}
-      </body>
-    </html>
-  );
+    return (
+        <html lang="fr">
+        <body>
+        {/* Navigation commune */}
+        <nav className="bg-blue-500 text-white py-4">
+            <div className="container mx-auto flex justify-between items-center">
+                <h1 className="text-2xl font-bold">
+                    ðŸŽ¥ Cinema<span className="text-yellow-400">Reservation</span>
+                </h1>
+                <div className="space-x-4">
+                    <a href="/">Accueil</a>
+                    <a href="/login">Connexion</a>
+                    <a href="/register">Inscription</a>
+                </div>
+            </div>
+        </nav>
+
+        {/* Contenu de la page */}
+        <main>{children}</main>
+
+        {/* Footer global */}
+        <footer className="bg-blue-500 text-white py-4 text-center">
+            Â© 2025 Cinema Reservation
+        </footer>
+        </body>
+        </html>
+    );
 }
Index: app/globals.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>@tailwind base;\r\n@tailwind components;\r\n@tailwind utilities;\r\n\r\n:root {\r\n  --background: #ffffff;\r\n  --foreground: #171717;\r\n}\r\n\r\n@media (prefers-color-scheme: dark) {\r\n  :root {\r\n    --background: #0a0a0a;\r\n    --foreground: #ededed;\r\n  }\r\n}\r\n\r\nbody {\r\n  color: var(--foreground);\r\n  background: var(--background);\r\n  font-family: Arial, Helvetica, sans-serif;\r\n}\r\n\r\n.container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n}\r\n\r\n/* Ajouter dans le fichier global CSS si nÃ©cessaire */\r\n.navbar {\r\n  background: linear-gradient(to right, #4facfe 0%, #00f2fe 100%);\r\n}\r\n\r\ninput {\r\n  color: var(--background);\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/globals.css b/app/globals.css
--- a/app/globals.css	(revision 471200d35ea2f6922d560e3f80fbf24ae53e353e)
+++ b/app/globals.css	(date 1737364557091)
@@ -2,6 +2,7 @@
 @tailwind components;
 @tailwind utilities;
 
+
 :root {
   --background: #ffffff;
   --foreground: #171717;
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectModuleManager\">\r\n    <modules>\r\n      <module fileurl=\"file://$PROJECT_DIR$/.idea/cinema-reservation.iml\" filepath=\"$PROJECT_DIR$/.idea/cinema-reservation.iml\" />\r\n    </modules>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
--- a/.idea/modules.xml	(revision 471200d35ea2f6922d560e3f80fbf24ae53e353e)
+++ b/.idea/modules.xml	(date 1737368184720)
@@ -2,7 +2,7 @@
 <project version="4">
   <component name="ProjectModuleManager">
     <modules>
-      <module fileurl="file://$PROJECT_DIR$/.idea/cinema-reservation.iml" filepath="$PROJECT_DIR$/.idea/cinema-reservation.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/Front-end.iml" filepath="$PROJECT_DIR$/.idea/Front-end.iml" />
     </modules>
   </component>
 </project>
\ No newline at end of file
Index: app/login/page.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"use client\";\r\n\r\n\r\n// app/login/page.jsx\r\nimport Login from '../../pages/Login';\r\nimport React from \"react\";\r\n\r\nexport default function LoginPage() {\r\n    return <Login />;\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/login/page.jsx b/app/login/page.jsx
--- a/app/login/page.jsx	(revision 471200d35ea2f6922d560e3f80fbf24ae53e353e)
+++ b/app/login/page.jsx	(date 1737369977357)
@@ -1,10 +1,52 @@
 "use client";
 
+import React, { useState } from "react";
+import UserForm from "@/components/UserForm";
+import { loginUser, loginFakeUser } from "@/services/sessionService";
+import useAuth from "../hooks/useAuth"; // Import du hook personnalisÃ©
+import { useRouter } from "next/router";
+
+const Login = () => {
+    const { isAuthenticated } = useAuth();
+
+    const [formData, setFormData] = useState({
+        email: "",
+        password: "",
+    });
+    const [message, setMessage] = useState("");
+
+    const handleChange = (e) => {
+        const { name, value } = e.target;
+        setFormData({ ...formData, [name]: value });
+    };
 
-// app/login/page.jsx
-import Login from '../../pages/Login';
-import React from "react";
+    const handleSubmit = async (e) => {
+        e.preventDefault();
+        try {
+            const response = await loginFakeUser(formData);
 
-export default function LoginPage() {
-    return <Login />;
-}
+            if(response?.success) {
+                localStorage.setItem("authToken", response.token);
+                setMessage("Connexion rÃ©ussie!");
+                setTimeout(() => {
+                    window.location.reload();
+                }, 1000);
+            }
+
+        } catch (error) {
+            setMessage(error.response?.data?.message || "Erreur de connexion.");
+        }
+    };
+
+    return (
+        <UserForm
+            formData={formData}
+            onChange={handleChange}
+            onSubmit={handleSubmit}
+            isRegister={false}
+            message={message}
+        />
+    );
+};
+
+export default Login;
Index: app/register/layout.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/register/layout.js b/app/register/layout.js
new file mode 100644
--- /dev/null	(date 1737370218696)
+++ b/app/register/layout.js	(date 1737370218696)
@@ -0,0 +1,31 @@
+import { Geist, Geist_Mono } from "next/font/google";
+import "../globals.css";
+import Navbar from "@/components/Navbar";
+
+const geistSans = Geist({
+  variable: "--font-geist-sans",
+  subsets: ["latin"],
+});
+
+const geistMono = Geist_Mono({
+  variable: "--font-geist-mono",
+  subsets: ["latin"],
+});
+
+export const metadata = {
+  title: "Create Next App",
+  description: "Generated by create next app",
+};
+
+export default function RootLayout({ children }) {
+  return (
+    <html lang="en">
+      <body
+        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
+      >
+      <Navbar />
+        {children}
+      </body>
+    </html>
+  );
+}
Index: app/page.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/page.js b/app/register/page.js
rename from app/page.js
rename to app/register/page.js
--- a/app/page.js	(revision 471200d35ea2f6922d560e3f80fbf24ae53e353e)
+++ b/app/register/page.js	(date 1737370218679)
@@ -2,7 +2,7 @@
 // src/App.jsx
 import React from "react";
 import { BrowserRouter as Router, Routes, Route } from "react-router-dom";
-import Home from "../pages/Home";
+import Home from "../../pages/Home";
 import Navbar from "@/components/Navbar";
 
 
Index: pages/Login.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"use client\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport UserForm from \"@/components/UserForm\";\r\nimport { loginUser, loginFakeUser } from \"@/services/sessionService\";\r\nimport useAuth from \"../hooks/useAuth\"; // Import du hook personnalisÃ©\r\nimport { useRouter } from \"next/router\";\r\n\r\nconst Login = () => {\r\n    const { isAuthenticated } = useAuth();\r\n\r\n    const [formData, setFormData] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n    });\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({ ...formData, [name]: value });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await loginFakeUser(formData);\r\n\r\n            if(response?.success) {\r\n                localStorage.setItem(\"authToken\", response.token);\r\n                setMessage(\"Connexion rÃ©ussie!\");\r\n                setTimeout(() => {\r\n                    window.location.reload();\r\n                }, 1000);\r\n            }\r\n\r\n        } catch (error) {\r\n            setMessage(error.response?.data?.message || \"Erreur de connexion.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <UserForm\r\n            formData={formData}\r\n            onChange={handleChange}\r\n            onSubmit={handleSubmit}\r\n            isRegister={false}\r\n            message={message}\r\n        />\r\n    );\r\n};\r\n\r\nexport default Login;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pages/Login.jsx b/pages/Login.jsx
--- a/pages/Login.jsx	(revision 471200d35ea2f6922d560e3f80fbf24ae53e353e)
+++ b/pages/Login.jsx	(date 1737370170288)
@@ -1,52 +1,0 @@
-"use client";
-
-import React, { useState } from "react";
-import UserForm from "@/components/UserForm";
-import { loginUser, loginFakeUser } from "@/services/sessionService";
-import useAuth from "../hooks/useAuth"; // Import du hook personnalisÃ©
-import { useRouter } from "next/router";
-
-const Login = () => {
-    const { isAuthenticated } = useAuth();
-
-    const [formData, setFormData] = useState({
-        email: "",
-        password: "",
-    });
-    const [message, setMessage] = useState("");
-
-    const handleChange = (e) => {
-        const { name, value } = e.target;
-        setFormData({ ...formData, [name]: value });
-    };
-
-    const handleSubmit = async (e) => {
-        e.preventDefault();
-        try {
-            const response = await loginFakeUser(formData);
-
-            if(response?.success) {
-                localStorage.setItem("authToken", response.token);
-                setMessage("Connexion rÃ©ussie!");
-                setTimeout(() => {
-                    window.location.reload();
-                }, 1000);
-            }
-
-        } catch (error) {
-            setMessage(error.response?.data?.message || "Erreur de connexion.");
-        }
-    };
-
-    return (
-        <UserForm
-            formData={formData}
-            onChange={handleChange}
-            onSubmit={handleSubmit}
-            isRegister={false}
-            message={message}
-        />
-    );
-};
-
-export default Login;
Index: pages/Home.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"use client\";\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport MovieCard from \"@/components/MovieCard\";\r\nimport {getFakeMovies, getMovies} from \"@/services/movieService\";\r\n\r\nconst Home = () => {\r\n    const [movies, setMovies] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        fetchFakeMovies()\r\n    }, []);\r\n\r\n    const fetchMovies = async () => {\r\n        try {\r\n            const response = await getMovies();\r\n            setMovies(response.data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching movies:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const fetchFakeMovies = async () => {\r\n        try {\r\n            const response = await getFakeMovies();\r\n            setMovies(response.data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching movies:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mx-auto p-4\">\r\n            <h1 className=\"text-2xl font-bold mb-4\">Films Ã  l'affiche</h1>\r\n            {loading ? (\r\n                <p>Chargement des films...</p>\r\n            ) : (\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                    {movies.map((movie) => (\r\n                        <MovieCard key={movie.id} movie={movie} />\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pages/Home.jsx b/pages/Home.jsx
--- a/pages/Home.jsx	(revision 471200d35ea2f6922d560e3f80fbf24ae53e353e)
+++ b/pages/Home.jsx	(date 1737370155124)
@@ -1,56 +1,0 @@
-"use client";
-
-
-
-
-import React, { useState, useEffect } from "react";
-import MovieCard from "@/components/MovieCard";
-import {getFakeMovies, getMovies} from "@/services/movieService";
-
-const Home = () => {
-    const [movies, setMovies] = useState([]);
-    const [loading, setLoading] = useState(true);
-
-    useEffect(() => {
-        fetchFakeMovies()
-    }, []);
-
-    const fetchMovies = async () => {
-        try {
-            const response = await getMovies();
-            setMovies(response.data);
-        } catch (error) {
-            console.error("Error fetching movies:", error);
-        } finally {
-            setLoading(false);
-        }
-    };
-
-    const fetchFakeMovies = async () => {
-        try {
-            const response = await getFakeMovies();
-            setMovies(response.data);
-        } catch (error) {
-            console.error("Error fetching movies:", error);
-        } finally {
-            setLoading(false);
-        }
-    }
-
-    return (
-        <div className="container mx-auto p-4">
-            <h1 className="text-2xl font-bold mb-4">Films Ã  l'affiche</h1>
-            {loading ? (
-                <p>Chargement des films...</p>
-            ) : (
-                <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
-                    {movies.map((movie) => (
-                        <MovieCard key={movie.id} movie={movie} />
-                    ))}
-                </div>
-            )}
-        </div>
-    );
-};
-
-export default Home;
diff --git a/.idea/cinema-reservation.iml b/.idea/Front-end.iml
rename from .idea/cinema-reservation.iml
rename to .idea/Front-end.iml
